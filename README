Right now, there are only three options for the stand-alone driver which can be
used to test two different mixing methods. The first test is to output Bryan-
Lewis mixing on two columns (a high latitude column and a tropical column),
and output the diffusivity coefficients at each level. This can be run using
pointers (allocate memory in the driver, have CVMix data structures point to
it) or using pure memory copies (allocate memory in the driver AND CVMix).

The third driver sets up a single column using the shear mixing formula found in
the Large, et al. KPP paper. For this test, each level is a different local
gradient Richardson number rather than a different depth to show how viscosity
varies with different choices of Ri.


DIRECTORY STRUCTURE
-------------------

bld/ -- Contains the Makefile, is also where the build process will keep a
        couple of setup files to help with the build. It has two subdirectories:
  bld/obj -- Where .o  and .mod files are stored.
  bld/exe -- Where the Makefile will put the executable.

doc/ -- Contains documentation. At this point, it only has a PDF of the latest
        protex in-code notes and a script to generate said PDF.

src/ -- Contains the source code, organized as follows. The top directory
        contains modules needed by the stand-alone driver (output, for example).
  src/drivers -- Stand-alone drivers for different tests.
  src/shared  -- Where all the modules that are needed to use CVMix with an 
                 outside model are stored. (Use as an svn:external!)

reg_tests/ -- I envision this becoming a way to do regression tests as we
              develop the code, but for now it just contains two tests. One
              outputs the diffusivity coefficients when using Bryan-Lewis
              mixing on two columns (with each column having its own B-L
              parameterization) and the other outputs the viscosity
              coefficients when using the shear mixing scheme in the KPP
              paper.

              Note that all scripts have a "-h" (or "--help") flag to print
              usage options and a "-nc" (or "--netcdf") flag to turn on netCDF
              output.

              BL Pointer test
              ---------------
              reg_tests/Bryan-Lewis]$ ./BL_test.sh

              BL Mem copy test
              ----------------
              reg_tests/Bryan-Lewis]$ ./BL_test.sh -mc

              Shear mixing test
              -----------------
              reg_Tests/shear-KPP]$ ./Large_test.sh

              Both directories also contain a basic NCL script to produce a
              plot.

              Bryan-Lewis/plot_diff_coeffs.ncl -- makes a plot with depth on
                   the y-axis and diffusivity (for both columns) on the x-axis.
              shear-KPP/plot_visc_coeffs.ncl -- makes a plot with local gradient
                   Richardson number on the x-axis and normalized viscosity
                   coefficient on the y-axis.


INSTALLATION NOTES
------------------

The bld directory contains a Makefile and a 'setup' utility. bld/setup is a
python script that asks for compiler / netcdf information (it only needs to
be run once, info is saved in bld/.CVMix_env). If you just run 'make' without
.CVMix_env, then setup will run automatically. The makefile does require one
variable as input: you need to specify which driver to build. If you omit this
field, you will see an error like

ERROR: You must compile using 'make VMIX_DRIVER=[driver]'. Valid choices are:
vmix_BL_driver-mem_copy.F90
vmix_BL_driver-pointers.F90
vmix_KPP-shear_driver.F90

To build with netcdf, run 'make VMIX_DRIVER=[] netcdf'.

The default executable is $CVMix/bld/exe/cvmix, but it can be overwritten with
'make EXE=[executable]'. 
